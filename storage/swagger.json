{
  "openapi": "3.1.0",
  "info": {
    "title": "Learning Platform API",
    "version": "1.0.0",
    "description": "API for the Learning Platform"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "nation": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "last_login": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "password": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "LEARNER",
              "INSTRUCTOR",
              "ADMIN"
            ]
          },
          "gender": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Learner": {
        "type": "object",
        "properties": {
          "learner_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "enrolledAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Instructor": {
        "type": "object",
        "properties": {
          "instructor_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "admin_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "admin_role_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AdminRole": {
        "type": "object",
        "properties": {
          "admin_role_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "permission_id": {
            "type": "string"
          },
          "permission_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AdminRolePermission": {
        "type": "object",
        "properties": {
          "permission_id": {
            "type": "string"
          },
          "admin_role_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountSecurity": {
        "type": "object",
        "properties": {
          "account_security_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "failed_login_attempts": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InstructorSpecializations": {
        "type": "object",
        "properties": {
          "instructor_specialization_id": {
            "type": "string"
          },
          "instructor_id": {
            "type": "string"
          },
          "specialization_id": {
            "type": "string"
          },
          "admin_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Specialization": {
        "type": "object",
        "properties": {
          "specialization_id": {
            "type": "string"
          },
          "instructor_id": {
            "type": "string"
          },
          "specialization_name": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CitizenIdsConfirm": {
        "type": "object",
        "properties": {
          "citizen_id": {
            "type": "string"
          },
          "instructor_id": {
            "type": "string"
          },
          "citizen_number": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "place_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "issued_place": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Approved",
              "Rejected"
            ]
          },
          "isVerified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InstructorQualifications": {
        "type": "object",
        "properties": {
          "instructor_qualification_id": {
            "type": "string"
          },
          "instructor_id": {
            "type": "string"
          },
          "specialization_id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Degree",
              "Certificate"
            ]
          },
          "title": {
            "type": "string"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "expire_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Approved",
              "Rejected"
            ]
          },
          "isVerified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "wallet_id": {
            "type": "string"
          },
          "instructor_id": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InstructorCourseTransaction": {
        "type": "object",
        "properties": {
          "instructor_course_transaction_id": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          },
          "wallet_id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "commision_rate": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Approved",
              "Rejected"
            ]
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Categories": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "string"
          },
          "category_name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Level": {
        "type": "object",
        "properties": {
          "level_id": {
            "type": "string"
          },
          "level_name": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LearnerCourses": {
        "type": "object",
        "properties": {
          "learner_course_id": {
            "type": "string"
          },
          "learner_id": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Enrolled",
              "Completed",
              "Cancelled"
            ]
          },
          "progress": {
            "type": "number"
          },
          "rating": {
            "type": "integer"
          },
          "feedback": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Chapter": {
        "type": "object",
        "properties": {
          "chapter_id": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          },
          "chapter_title": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Lesson": {
        "type": "object",
        "properties": {
          "lesson_id": {
            "type": "string"
          },
          "chapter_id": {
            "type": "string"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "duration": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "note_id": {
            "type": "string"
          },
          "lesson_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "time": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Feedback": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "rating": {
            "type": "integer"
          },
          "comment": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d1f3a488-3c9e-4fa2-9c01-187f304edf5d"
          },
          "title": {
            "type": "string",
            "example": "Introduction to AI"
          },
          "description": {
            "type": "string",
            "example": "A beginner's course on Artificial Intelligence."
          },
          "thumbnail": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "price": {
            "type": "number",
            "example": 49.99
          },
          "instructorId": {
            "type": "string",
            "example": "8c58f8f5-f91a-4bd6-9d34-4567867ecf89"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/account-securities": {
      "post": {
        "summary": "Create a new account security",
        "tags": [
          "AccountSecurity"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AccountSecurity created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all account securities",
        "tags": [
          "AccountSecurity"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of account securities"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/account-securities/{id}": {
      "get": {
        "summary": "Get account security by ID",
        "tags": [
          "AccountSecurity"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AccountSecurity found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AccountSecurity not found"
          }
        }
      },
      "put": {
        "summary": "Update account security by ID",
        "tags": [
          "AccountSecurity"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AccountSecurity updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AccountSecurity not found"
          }
        }
      },
      "delete": {
        "summary": "Delete account security by ID",
        "tags": [
          "AccountSecurity"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AccountSecurity deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AccountSecurity not found"
          }
        }
      }
    },
    "/api/admins": {
      "post": {
        "summary": "Create a new admin",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all admins",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of admins"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/{id}": {
      "get": {
        "summary": "Get admin by ID",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Admin not found"
          }
        }
      },
      "put": {
        "summary": "Update admin by ID",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Admin not found"
          }
        }
      },
      "delete": {
        "summary": "Delete admin by ID",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Admin not found"
          }
        }
      }
    },
    "/api/admin-roles": {
      "post": {
        "summary": "Create a new admin role",
        "tags": [
          "AdminRole"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AdminRole created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all admin roles",
        "tags": [
          "AdminRole"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of admin roles"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin-roles/{id}": {
      "get": {
        "summary": "Get admin role by ID",
        "tags": [
          "AdminRole"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AdminRole found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AdminRole not found"
          }
        }
      },
      "put": {
        "summary": "Update admin role by ID",
        "tags": [
          "AdminRole"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AdminRole updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AdminRole not found"
          }
        }
      },
      "delete": {
        "summary": "Delete admin role by ID",
        "tags": [
          "AdminRole"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AdminRole deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AdminRole not found"
          }
        }
      }
    },
    "/api/admin-role-permissions": {
      "post": {
        "summary": "Create a new admin role permission",
        "tags": [
          "AdminRolePermission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AdminRolePermission created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all admin role permissions",
        "tags": [
          "AdminRolePermission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of admin role permissions"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin-role-permissions/{permission_id}/{admin_role_id}": {
      "get": {
        "summary": "Get admin role permission by IDs",
        "tags": [
          "AdminRolePermission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "admin_role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AdminRolePermission found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AdminRolePermission not found"
          }
        }
      },
      "put": {
        "summary": "Update admin role permission by IDs",
        "tags": [
          "AdminRolePermission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "admin_role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AdminRolePermission updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AdminRolePermission not found"
          }
        }
      },
      "delete": {
        "summary": "Delete admin role permission by IDs",
        "tags": [
          "AdminRolePermission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "admin_role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AdminRolePermission deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "AdminRolePermission not found"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nguyen Van A"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mysecurepassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mysecurepassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/categories": {
      "post": {
        "summary": "Create a new category",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all categories",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Get category by ID",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "summary": "Update category by ID",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "summary": "Delete category by ID",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/api/chapters": {
      "post": {
        "summary": "Create a new chapter",
        "tags": [
          "Chapter"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chapter created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all chapters",
        "tags": [
          "Chapter"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of chapters"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/chapters/{id}": {
      "get": {
        "summary": "Get chapter by ID",
        "tags": [
          "Chapter"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chapter found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Chapter not found"
          }
        }
      },
      "put": {
        "summary": "Update chapter by ID",
        "tags": [
          "Chapter"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chapter updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Chapter not found"
          }
        }
      },
      "delete": {
        "summary": "Delete chapter by ID",
        "tags": [
          "Chapter"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chapter deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Chapter not found"
          }
        }
      }
    },
    "/api/citizen-ids-confirms": {
      "post": {
        "summary": "Create a new citizen ids confirm",
        "tags": [
          "CitizenIdsConfirm"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CitizenIdsConfirm created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all citizen ids confirms",
        "tags": [
          "CitizenIdsConfirm"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of citizen ids confirms"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/citizen-ids-confirms/{id}": {
      "get": {
        "summary": "Get citizen ids confirm by ID",
        "tags": [
          "CitizenIdsConfirm"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CitizenIdsConfirm found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "CitizenIdsConfirm not found"
          }
        }
      },
      "put": {
        "summary": "Update citizen ids confirm by ID",
        "tags": [
          "CitizenIdsConfirm"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CitizenIdsConfirm updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "CitizenIdsConfirm not found"
          }
        }
      },
      "delete": {
        "summary": "Delete citizen ids confirm by ID",
        "tags": [
          "CitizenIdsConfirm"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CitizenIdsConfirm deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "CitizenIdsConfirm not found"
          }
        }
      }
    },
    "/api/courses": {
      "get": {
        "summary": "Get all courses",
        "tags": [
          "Course"
        ],
        "responses": {
          "200": {
            "description": "List of all courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch courses"
          }
        }
      },
      "post": {
        "summary": "Create a new course",
        "tags": [
          "Course"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "thumbnail",
                  "price"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Introduction to AI"
                  },
                  "description": {
                    "type": "string",
                    "example": "A beginner's course on AI"
                  },
                  "thumbnail": {
                    "type": "string",
                    "example": "https://example.com/thumbnail.jpg"
                  },
                  "price": {
                    "type": "number",
                    "example": 49.99
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/courses/{id}": {
      "get": {
        "summary": "Get a course by ID",
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the course to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to fetch course"
          }
        }
      },
      "put": {
        "summary": "Update a course by ID",
        "tags": [
          "Course"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the course to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Advanced AI"
                  },
                  "description": {
                    "type": "string",
                    "example": "An advanced course on AI"
                  },
                  "thumbnail": {
                    "type": "string",
                    "example": "https://example.com/updated-thumbnail.jpg"
                  },
                  "price": {
                    "type": "number",
                    "example": 99.99
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Course updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a course by ID",
        "tags": [
          "Course"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the course to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Course not found"
          }
        }
      }
    },
    "/api/feedbacks/{courseId}": {
      "get": {
        "summary": "Get feedback for a specific course",
        "tags": [
          "Feedback"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "courseId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the course"
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback list"
          }
        }
      }
    },
    "/api/feedbacks": {
      "post": {
        "summary": "Submit feedback for a course",
        "tags": [
          "Feedback"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "courseId",
                  "rating",
                  "comment"
                ],
                "properties": {
                  "courseId": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback submitted"
          }
        }
      }
    },
    "/api/instructors": {
      "post": {
        "summary": "Create a new instructor",
        "tags": [
          "Instructor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Instructor created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all instructors",
        "tags": [
          "Instructor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of instructors"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/instructors/{id}": {
      "get": {
        "summary": "Get instructor by ID",
        "tags": [
          "Instructor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instructor found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Instructor not found"
          }
        }
      },
      "put": {
        "summary": "Update instructor by ID",
        "tags": [
          "Instructor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Instructor updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Instructor not found"
          }
        }
      },
      "delete": {
        "summary": "Delete instructor by ID",
        "tags": [
          "Instructor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instructor deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Instructor not found"
          }
        }
      }
    },
    "/api/instructor-course-transactions": {
      "post": {
        "summary": "Create a new instructor course transaction",
        "tags": [
          "InstructorCourseTransaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "InstructorCourseTransaction created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all instructor course transactions",
        "tags": [
          "InstructorCourseTransaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of instructor course transactions"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/instructor-course-transactions/{id}": {
      "get": {
        "summary": "Get instructor course transaction by ID",
        "tags": [
          "InstructorCourseTransaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InstructorCourseTransaction found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorCourseTransaction not found"
          }
        }
      },
      "put": {
        "summary": "Update instructor course transaction by ID",
        "tags": [
          "InstructorCourseTransaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "InstructorCourseTransaction updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorCourseTransaction not found"
          }
        }
      },
      "delete": {
        "summary": "Delete instructor course transaction by ID",
        "tags": [
          "InstructorCourseTransaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InstructorCourseTransaction deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorCourseTransaction not found"
          }
        }
      }
    },
    "/api/instructor-qualifications": {
      "post": {
        "summary": "Create a new instructor qualification",
        "tags": [
          "InstructorQualifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "InstructorQualifications created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all instructor qualifications",
        "tags": [
          "InstructorQualifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of instructor qualifications"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/instructor-qualifications/{id}": {
      "get": {
        "summary": "Get instructor qualification by ID",
        "tags": [
          "InstructorQualifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InstructorQualifications found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorQualifications not found"
          }
        }
      },
      "put": {
        "summary": "Update instructor qualification by ID",
        "tags": [
          "InstructorQualifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "InstructorQualifications updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorQualifications not found"
          }
        }
      },
      "delete": {
        "summary": "Delete instructor qualification by ID",
        "tags": [
          "InstructorQualifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InstructorQualifications deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorQualifications not found"
          }
        }
      }
    },
    "/api/instructor-specializations": {
      "post": {
        "summary": "Create a new instructor specialization",
        "tags": [
          "InstructorSpecializations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "InstructorSpecializations created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all instructor specializations",
        "tags": [
          "InstructorSpecializations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of instructor specializations"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/instructor-specializations/{id}": {
      "get": {
        "summary": "Get instructor specialization by ID",
        "tags": [
          "InstructorSpecializations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InstructorSpecializations found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorSpecializations not found"
          }
        }
      },
      "put": {
        "summary": "Update instructor specialization by ID",
        "tags": [
          "InstructorSpecializations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "InstructorSpecializations updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorSpecializations not found"
          }
        }
      },
      "delete": {
        "summary": "Delete instructor specialization by ID",
        "tags": [
          "InstructorSpecializations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InstructorSpecializations deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "InstructorSpecializations not found"
          }
        }
      }
    },
    "/api/learners": {
      "get": {
        "summary": "Get all learners (no user details)",
        "tags": [
          "Learner"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of learners"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/learners/with-user": {
      "get": {
        "summary": "Get all learners with user details",
        "tags": [
          "Learner"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of learners with user data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/learners/me": {
      "get": {
        "summary": "Get current learner profile",
        "tags": [
          "Learner"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current learner"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update current learner profile",
        "tags": [
          "Learner"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Learner updated"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Delete current learner",
        "tags": [
          "Learner"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Learner deleted"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/leanrer-courses": {
      "post": {
        "summary": "Create a new leanrer course",
        "tags": [
          "LeanrerCourses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "LeanrerCourse created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all leanrer courses",
        "tags": [
          "LeanrerCourses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of leanrer courses"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/leanrer-courses/{id}": {
      "get": {
        "summary": "Get leanrer course by ID",
        "tags": [
          "LeanrerCourses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LeanrerCourse found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "LeanrerCourse not found"
          }
        }
      },
      "put": {
        "summary": "Update leanrer course by ID",
        "tags": [
          "LeanrerCourses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LeanrerCourse updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "LeanrerCourse not found"
          }
        }
      },
      "delete": {
        "summary": "Delete leanrer course by ID",
        "tags": [
          "LeanrerCourses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LeanrerCourse deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "LeanrerCourse not found"
          }
        }
      }
    },
    "/api/lessons": {
      "post": {
        "summary": "Create a new lesson",
        "tags": [
          "Lesson"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lesson created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all lessons",
        "tags": [
          "Lesson"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of lessons"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/lessons/{id}": {
      "get": {
        "summary": "Get lesson by ID",
        "tags": [
          "Lesson"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lesson found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Lesson not found"
          }
        }
      },
      "put": {
        "summary": "Update lesson by ID",
        "tags": [
          "Lesson"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lesson updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Lesson not found"
          }
        }
      },
      "delete": {
        "summary": "Delete lesson by ID",
        "tags": [
          "Lesson"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lesson deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Lesson not found"
          }
        }
      }
    },
    "/api/levels": {
      "post": {
        "summary": "Create a new level",
        "tags": [
          "Level"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Level created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all levels",
        "tags": [
          "Level"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of levels"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/levels/{id}": {
      "get": {
        "summary": "Get level by ID",
        "tags": [
          "Level"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Level found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Level not found"
          }
        }
      },
      "put": {
        "summary": "Update level by ID",
        "tags": [
          "Level"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Level updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Level not found"
          }
        }
      },
      "delete": {
        "summary": "Delete level by ID",
        "tags": [
          "Level"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Level deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Level not found"
          }
        }
      }
    },
    "/api/notes": {
      "post": {
        "summary": "Create a new note",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all notes",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of notes"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/notes/{id}": {
      "get": {
        "summary": "Get note by ID",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Note not found"
          }
        }
      },
      "put": {
        "summary": "Update note by ID",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Note not found"
          }
        }
      },
      "delete": {
        "summary": "Delete note by ID",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Note not found"
          }
        }
      }
    },
    "/api/permissions": {
      "post": {
        "summary": "Create a new permission",
        "tags": [
          "Permission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all permissions",
        "tags": [
          "Permission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of permissions"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "summary": "Get permission by ID",
        "tags": [
          "Permission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Permission not found"
          }
        }
      },
      "put": {
        "summary": "Update permission by ID",
        "tags": [
          "Permission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Permission not found"
          }
        }
      },
      "delete": {
        "summary": "Delete permission by ID",
        "tags": [
          "Permission"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Permission not found"
          }
        }
      }
    },
    "/api/specializations": {
      "post": {
        "summary": "Create a new specialization",
        "tags": [
          "Specialization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Specialization created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all specializations",
        "tags": [
          "Specialization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of specializations"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/specializations/{id}": {
      "get": {
        "summary": "Get specialization by ID",
        "tags": [
          "Specialization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specialization found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Specialization not found"
          }
        }
      },
      "put": {
        "summary": "Update specialization by ID",
        "tags": [
          "Specialization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Specialization updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Specialization not found"
          }
        }
      },
      "delete": {
        "summary": "Delete specialization by ID",
        "tags": [
          "Specialization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specialization deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Specialization not found"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nguyen Van A"
                  },
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/wallets": {
      "post": {
        "summary": "Create a new wallet",
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Wallet created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all wallets",
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of wallets"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/wallets/{id}": {
      "get": {
        "summary": "Get wallet by ID",
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Wallet not found"
          }
        }
      },
      "put": {
        "summary": "Update wallet by ID",
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Wallet not found"
          }
        }
      },
      "delete": {
        "summary": "Delete wallet by ID",
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Wallet not found"
          }
        }
      }
    }
  },
  "tags": []
}